[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: ../../../../Downloads/javascriptNumbers.mp4
Video File: ../../../../Downloads/javascriptNumbers.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 96
Active Line: 101
Video Position: 6948

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial Unicode MS,40,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,134
Style: 720en,Arial,30,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,1.2,2,2,10,10,10,1
Style: 720cn,Microsoft YaHei,45,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,45,134
Style: 720cn-2,Microsoft YaHei,45,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,75,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 1,0:00:26.53,0:00:28.08,720cn,,0,0,0,,早上好 JSConf
Dialogue: 2,0:00:26.53,0:00:28.08,720en,,0,0,0,,good morning JSConf
Dialogue: 1,0:00:28.08,0:00:30.04,720cn,,0,0,0,,所以你们都知道我的名字了
Dialogue: 2,0:00:28.08,0:00:30.04,720en,,0,0,0,,so you already know my name
Dialogue: 1,0:00:30.04,0:00:32.38,720cn,,0,0,0,,我从来没看过自己名字显示的这么大
Dialogue: 2,0:00:30.04,0:00:32.38,720en,,0,0,0,,I've never seen it this big
Dialogue: 1,0:00:32.38,0:00:37.20,720cn,,0,0,0,,可以帮我照个照片吗？我会很感激的
Dialogue: 2,0:00:32.38,0:00:37.20,720en,,0,0,0,,can someone take a picture of it for me I'll be grateful okay
Dialogue: 1,0:00:37.20,0:00:43.18,720cn,,0,0,0,,今天我想跟大家分享一下我对Javascript数字问题的思考
Dialogue: 2,0:00:37.20,0:00:43.18,720en,,0,0,0,,today I'd like to share with you some of the questions I was asking myself about numbers in JavaScript
Dialogue: 1,0:00:43.18,0:00:46.48,720cn,,0,0,0,,昨天Brendan Eich（JS的作者）在分享中告诉我们
Dialogue: 2,0:00:43.18,0:00:46.48,720en,,0,0,0,,because even Brendan Eich yesterday and his keynote
Dialogue: 1,0:00:46.48,0:00:50.50,720cn,,0,0,0,,Javascript中的数字并不完美
Dialogue: 2,0:00:46.48,0:00:50.50,720en,,0,0,0,,told us that the numbers are not really perfect currently
Dialogue: 1,0:00:50.50,0:00:55.52,720cn,,0,0,0,,所以Javascript以后的版本中会引入新的数字类型
Dialogue: 2,0:00:50.50,0:00:55.52,720en,,0,0,0,,that's why all these new types of numbers are being introduced for future versions
Dialogue: 1,0:00:56.12,0:01:02.26,720cn,,0,0,0,,但今天我想把注意力集中在现有的Javascript中数字
Dialogue: 2,0:00:56.12,0:01:02.26,720en,,0,0,0,,but today I like to focus on what currently we have in JavaScript in terms of numbers
Dialogue: 1,0:01:02.26,0:01:08.68,720cn,,0,0,0,,因为当你做十进制小数或者大数的运算时
Dialogue: 2,0:01:02.26,0:01:08.68,720en,,0,0,0,,because if you ever tried to do some computations on decimal fractions or large integers in JavaScript
Dialogue: 1,0:01:08.68,0:01:12.44,720cn,,0,0,0,,你可能会注意到结果并不精确
Dialogue: 2,0:01:08.68,0:01:12.44,720en,,0,0,0,,you probably noticed that they are not really precise
Dialogue: 1,0:01:12.44,0:01:15.58,720cn,,0,0,0,,有时候结果甚至出人意料
Dialogue: 2,0:01:12.44,0:01:15.58,720en,,0,0,0,,and may lead to some quite unexpected results
Dialogue: 1,0:01:15.81,0:01:18.38,720cn,,0,0,0,,我举几个例子
Dialogue: 2,0:01:15.82,0:01:18.38,720en,,0,0,0,,let me give you some examples of that
Dialogue: 1,0:01:21.94,0:01:25.64,720cn,,0,0,0,,如果我们计算0.1 + 0.2
Dialogue: 2,0:01:21.94,0:01:25.80,720en,,0,0,0,,if we try to add 0.1 to 0.2
Dialogue: 1,0:01:25.80,0:01:28.82,720cn,,0,0,0,,你可能认为结果是0.3
Dialogue: 2,0:01:25.82,0:01:28.82,720en,,0,0,0,,you would expect it will be equal to 0.3
Dialogue: 1,0:01:28.82,0:01:30.62,720cn,,0,0,0,,实际上并不是
Dialogue: 2,0:01:28.84,0:01:30.62,720en,,0,0,0,,but it's not
Dialogue: 1,0:01:30.62,0:01:36.52,720cn,,0,0,0,,而是非常接近0.3的一个数
Dialogue: 2,0:01:30.64,0:01:36.68,720en,,0,0,0,,what it's actually equal to a number very close to 0.3
Dialogue: 1,0:01:36.68,0:01:40.42,720cn,,0,0,0,,另一方面，如果你用一个非常大的数
Dialogue: 2,0:01:36.70,0:01:40.42,720en,,0,0,0,,on the other hand if you take quite a large integer
Dialogue: 1,0:01:40.42,0:01:47.98,720cn,,0,0,0,,比如这个，在它的基础上加1
Dialogue: 2,0:01:40.42,0:01:47.98,720en,,0,0,0,,like for example this one and you try to add one to it
Dialogue: 1,0:01:49.26,0:01:52.04,720cn,,0,0,0,,结果还是原来的数字不变
Dialogue: 2,0:01:49.26,0:01:52.04,720en,,0,0,0,,you will get exactly the same number
Dialogue: 1,0:01:52.04,0:01:56.72,720cn,,0,0,0,,但如果在它基础上加2，结果就对了
Dialogue: 2,0:01:52.06,0:01:56.72,720en,,0,0,0,,but if you add 2 to it you get the result as expected
Dialogue: 1,0:01:57.18,0:02:02.22,720cn,,0,0,0,,但问题不仅仅是这些计算结果不精确
Dialogue: 2,0:01:57.18,0:02:02.22,720en,,0,0,0,,but it's not only about inaccurate results of some computations
Dialogue: 1,0:02:02.22,0:02:07.44,720cn,,0,0,0,,Javascript中的数字还有其他怪异的地方
Dialogue: 2,0:02:02.22,0:02:07.44,720en,,0,0,0,,there are many different weird things about the numbers in JavaScript
Dialogue: 1,0:02:07.44,0:02:11.34,720cn,,0,0,0,,像是臭名昭彰的NaN
Dialogue: 2,0:02:07.46,0:02:11.34,720en,,0,0,0,,like this infamous NaN value
Dialogue: 1,0:02:13.12,0:02:22.09,720cn,,0,0,0,,一般你做了非法的数字运算时，Javascript会返回NaN
Dialogue: 2,0:02:13.12,0:02:22.09,720en,,0,0,0,,so NaN is a value you will get if you try to turn in to a number something that is not a number
Dialogue: 1,0:02:22.09,0:02:24.36,720cn,,0,0,0,,所以我们来试试这个
Dialogue: 2,0:02:22.12,0:02:24.59,720en,,0,0,0,,so let's try something like this
Dialogue: 1,0:02:24.59,0:02:28.12,720cn,,0,0,0,,但是如果你查看NaN的类型
Dialogue: 2,0:02:24.62,0:02:28.12,720en,,0,0,0,,but if you try to check the type of NaN
Dialogue: 1,0:02:30.96,0:02:32.72,720cn,,0,0,0,,NaN的类型实际上是数字
Dialogue: 2,0:02:30.96,0:02:32.72,720en,,0,0,0,,it will tell you it's a number
Dialogue: 1,0:02:32.72,0:02:37.04,720cn,,0,0,0,,每次我碰上这种问题
Dialogue: 2,0:02:32.72,0:02:37.04,720en,,0,0,0,,and every time I stumbled upon something like this happening
Dialogue: 1,0:02:37.04,0:02:39.80,720cn,,0,0,0,,我就会问我自己为什么
Dialogue: 2,0:02:37.04,0:02:39.80,720en,,0,0,0,,I was asking myself why does it happen
Dialogue: 1,0:02:39.80,0:02:41.98,720cn,,0,0,0,,因为背后肯定有原因的，对吧？
Dialogue: 2,0:02:39.80,0:02:41.98,720en,,0,0,0,,because there has to be a reason right?
Dialogue: 1,0:02:41.98,0:02:46.92,720cn,,0,0,0,,多数情况下这种奇怪的行为不会无缘无故的发生
Dialogue: 2,0:02:41.98,0:02:46.92,720en,,0,0,0,,things like that don't happen without the reason at least in most cases
Dialogue: 1,0:02:47.60,0:02:50.28,720cn,,0,0,0,,当我们有和Javascript相关的问题时
Dialogue: 2,0:02:47.60,0:02:50.28,720en,,0,0,0,,and if you're asking yourself a question about JavaScript
Dialogue: 1,0:02:50.28,0:02:52.78,720cn,,0,0,0,,我们有一个确定的地方能找到答案
Dialogue: 2,0:02:50.28,0:02:52.78,720en,,0,0,0,,there is one sure place to look for the answer
Dialogue: 1,0:02:52.78,0:02:55.14,720cn,,0,0,0,,ECMAscript规范
Dialogue: 2,0:02:52.78,0:02:55.14,720en,,0,0,0,,the ECMA script standard
Dialogue: 1,0:02:56.74,0:02:59.62,720cn,,0,0,0,,但规范里只是说
Dialogue: 2,0:02:56.74,0:02:59.62,720en,,0,0,0,,but all the standard says about the numbers is that
Dialogue: 1,0:02:59.62,0:03:08.36,720cn,,0,0,0,,Javascript数字使用双精度64位IEEE 754规范的浮点数表示法
Dialogue: 2,0:02:59.62,0:03:08.36,720en,,0,0,0,,they are represented by the double precision 64-bit format IEEE 754 binary floating-point arithmetic
Dialogue: 1,0:03:08.36,0:03:11.78,720cn,,0,0,0,,事实上还有多一点解释
Dialogue: 2,0:03:08.36,0:03:11.78,720en,,0,0,0,,actually yeah it's just a little bit more than that
Dialogue: 1,0:03:11.78,0:03:15.62,720cn,,0,0,0,,但没有写Javascript中，数字在内存中是如何表示的
Dialogue: 2,0:03:11.78,0:03:15.62,720en,,0,0,0,,but nothing about how the numbers are represented in the memory
Dialogue: 1,0:03:15.62,0:03:18.09,720cn,,0,0,0,,也没有解释计算是怎样完成的
Dialogue: 2,0:03:15.62,0:03:18.09,720en,,0,0,0,,how the calculations are done
Dialogue: 1,0:03:18.09,0:03:28.33,720cn,,0,0,0,,所以我进一步调研，发现Javascript并不是第一个使用IEEE 754规范的
Dialogue: 2,0:03:18.12,0:03:28.33,720en,,0,0,0,,so I had to look the further but it turns out that javascript is not the first language that uses this standard
Dialogue: 1,0:03:28.33,0:03:30.08,720cn,,0,0,0,,有许多其他的语言也使用了这个规范
Dialogue: 2,0:03:28.34,0:03:30.22,720en,,0,0,0,,there are many others
Dialogue: 1,0:03:30.22,0:03:42.08,720cn,,0,0,0,,如果你用Python，会得到一样的结果
Dialogue: 2,0:03:30.24,0:03:42.08,720en,,0,0,0,,if you try for example Python we have exactly the same problems in here
Dialogue: 1,0:03:46.78,0:03:54.66,720cn,,0,0,0,,更新一些的语言，比如Ruby，也是一样的结果
Dialogue: 2,0:03:46.78,0:03:54.66,720en,,0,0,0,,something more modern like Ruby nope
Dialogue: 1,0:03:55.92,0:04:01.16,720cn,,0,0,0,,当然，还有Java
Dialogue: 2,0:03:55.92,0:04:01.16,720en,,0,0,0,,and of course Java
Dialogue: 1,0:04:01.56,0:04:05.54,720cn,,0,0,0,,事实上我还需要写一个类来完成这个计算
Dialogue: 2,0:04:01.56,0:04:05.54,720en,,0,0,0,,actually I had to read write a class to add these two numbers in Java
Dialogue: 1,0:04:12.36,0:04:19.18,720cn-2,,0,0,0,,事实上Javascript中数字的问题就是从Java中来的
Dialogue: 2,0:04:12.36,0:04:19.18,720en,,0,0,0,,anyway it turns out that we have these kind of numbers in JavaScript because they were in Java at the first place
Dialogue: 1,0:04:22.00,0:04:24.58,720cn,,0,0,0,,好，所以我问自己这些问题为什么存在
Dialogue: 2,0:04:22.00,0:04:24.58,720en,,0,0,0,,right so I was still asking myself why does it happen
Dialogue: 1,0:04:24.58,0:04:31.44,720cn,,0,0,0,,我们对数字的表示出了什么问题才会导致不精确的计算结果呢？
Dialogue: 2,0:04:24.58,0:04:31.44,720en,,0,0,0,,what is wrong with this representation of the numbers that we have such imprecise results
Dialogue: 1,0:04:31.44,0:04:37.90,720cn,,0,0,0,,第一步我想看到Javascript数字是如何用二进制来表示的
Dialogue: 2,0:04:31.44,0:04:37.90,720en,,0,0,0,,and the first step I wanted to make was to see how a given number looks like in this binary representation
Dialogue: 1,0:04:37.90,0:04:42.78,720cn,,0,0,0,,我想看到64位表示法中的每一位
Dialogue: 2,0:04:37.90,0:04:42.78,720en,,0,0,0,,I wanted to see every single bit of this 64 bit representation
Dialogue: 1,0:04:43.28,0:04:50.10,720cn,,0,0,0,,不幸的是，我们无法简单获取到内存中的二进制位
Dialogue: 2,0:04:43.28,0:04:50.35,720en,,0,0,0,,unfortunately in JavaScript we don't really have easy direct access to bits in memory
Dialogue: 1,0:04:50.35,0:04:54.24,720cn,,0,0,0,,借助于一些工具
Dialogue: 2,0:04:50.38,0:04:54.24,720en,,0,0,0,,but with a little help from my friends typed our eyes
Dialogue: 1,0:04:54.56,0:04:59.86,720cn,,0,0,0,,我自己写了个方法
Dialogue: 2,0:04:54.56,0:04:59.86,720en,,0,0,0,,I was able to create myself a little utility function
Dialogue: 1,0:05:08.56,0:05:13.18,720cn,,0,0,0,,所以我们可以把任何数字，比如0.3
Dialogue: 2,0:05:08.56,0:05:13.18,720en,,0,0,0,,so now we can turn any number let's say our 0.3
Dialogue: 1,0:05:13.94,0:05:17.22,720cn,,0,0,0,,用二进制的来表示
Dialogue: 2,0:05:13.94,0:05:17.22,720en,,0,0,0,,and see how it looks in its binary representation
Dialogue: 1,0:05:17.22,0:05:25.42,720cn,,0,0,0,,这就是0.3用64位双精度浮点数的二进制表示
Dialogue: 2,0:05:17.22,0:05:25.61,720en,,0,0,0,,so these are all 64 bits of binary representation of number 0.3 in this double precision floating point
Dialogue: 1,0:05:25.61,0:05:31.58,720cn,,0,0,0,,我们来比较下它和0.1加0.2的结果
Dialogue: 2,0:05:25.64,0:05:31.58,720en,,0,0,0,,so let's compare it to result of the computation of 0.1 plus 0.2
Dialogue: 1,0:05:32.28,0:05:37.54,720cn,,0,0,0,,几乎是一样的，但仔细看右边后三位
Dialogue: 2,0:05:32.28,0:05:37.54,720en,,0,0,0,,it's almost the same but if you look at the last three bits on the right side
Dialogue: 1,0:05:37.54,0:05:41.08,720cn,,0,0,0,,你会看到差异
Dialogue: 2,0:05:37.54,0:05:41.08,720en,,0,0,0,,you will see that there is a little difference there
Dialogue: 1,0:05:42.06,0:05:46.55,720cn,,0,0,0,,我们可以拿任意一个数
Dialogue: 2,0:05:42.06,0:05:46.55,720en,,0,0,0,,and yeah we can take any number we want like I don't know
Dialogue: 1,0:05:46.55,0:05:49.46,720cn,,0,0,0,,比如2013.09，看看是如何表示的
Dialogue: 2,0:05:46.56,0:05:49.46,720en,,0,0,0,,2013 0 9 and see how it looks like
Dialogue: 1,0:05:49.46,0:05:55.14,720cn,,0,0,0,,但只看这些0和1，我们无法理解
Dialogue: 2,0:05:49.46,0:05:55.14,720en,,0,0,0,,but looking at these 0s and 1s doesn't really give us any kind of understanding
Dialogue: 1,0:05:55.14,0:05:58.60,720cn,,0,0,0,,发生了什么，数字是怎么计算的
Dialogue: 2,0:05:55.14,0:05:58.60,720en,,0,0,0,,what is going on there how these numbers are computed
Dialogue: 1,0:06:00.38,0:06:04.84,720cn,,0,0,0,,幸运的是，由于这个规范被很多语言采用
Dialogue: 2,0:06:00.38,0:06:05.05,720en,,0,0,0,,fortunately because this standard is used in many languages
Dialogue: 1,0:06:05.05,0:06:10.00,720cn,,0,0,0,,网上有很多资源让我们了解这个规范
Dialogue: 2,0:06:05.08,0:06:10.00,720en,,0,0,0,,there are quite a few resources online that tell us how does the standard work
Dialogue: 1,0:06:10.54,0:06:13.44,720cn,,0,0,0,,这里我收集了一些
Dialogue: 2,0:06:10.54,0:06:13.44,720en,,0,0,0,,I gathered a couple of these here
Dialogue: 1,0:06:13.92,0:06:20.75,720cn,,0,0,0,,但不幸的是，这里充满了疯狂的公式和二进制数的运算
Dialogue: 2,0:06:13.92,0:06:20.75,720en,,0,0,0,,but unfortunately they are full of crazy equations and operations on binary numbers
Dialogue: 1,0:06:20.75,0:06:28.78,720cn,,0,0,0,,我花了很多个夜晚，看了大量论文才真正理解了它是如何工作的
Dialogue: 2,0:06:20.76,0:06:29.23,720en,,0,0,0,,and it took me quite a few long evenings a lot of paper to get my head around how it really works
Dialogue: 1,0:06:29.23,0:06:31.86,720cn,,0,0,0,,所以今天我帮你们省下一些麻烦
Dialogue: 2,0:06:29.26,0:06:32.05,720en,,0,0,0,,so here I am to save you the trouble
Dialogue: 1,0:06:32.05,0:06:37.06,720cn,,0,0,0,,希望你们听完之后能理解这一页wik
Dialogue: 2,0:06:32.08,0:06:37.06,720en,,0,0,0,,iand hopefully after this talk you will actually be able to understand this Wikipedia page
Dialogue: 1,0:06:37.66,0:06:41.98,720cn,,0,0,0,,我们来看看计数法是如何工作的
Dialogue: 2,0:06:37.66,0:06:42.01,720en,,0,0,0,,so let's see how this representation works
Dialogue: 1,0:06:42.01,0:06:48.54,720cn,,0,0,0,,像我前面提到的那样，我们用64位来表示数字
Dialogue: 2,0:06:42.04,0:06:48.54,720en,,0,0,0,,so as I already mentioned a couple of times we have 64 bits to represent our number
Dialogue: 1,0:06:48.54,0:06:51.60,720cn,,0,0,0,,这64位可以分成三部分来看
Dialogue: 2,0:06:48.54,0:06:51.60,720en,,0,0,0,,and they can be divided into three parts
Dialogue: 1,0:06:52.02,0:06:56.28,720cn,,0,0,0,,第一部分是1位符号位，在这里
Dialogue: 2,0:06:52.02,0:06:56.28,720en,,0,0,0,,there is one bit for a sign - is this guy in here
Dialogue: 1,0:06:57.16,0:07:00.90,720cn,,0,0,0,,表示数字是正数还是负数
Dialogue: 2,0:06:57.16,0:07:00.90,720en,,0,0,0,,it tells us if the number is positive or negative
Dialogue: 1,0:07:00.90,0:07:07.72,720cn,,0,0,0,,右侧的52位，实际上是53位，有一位是隐藏的
Dialogue: 2,0:07:00.90,0:07:07.72,720en,,0,0,0,,there is this big chunk on the right 52 bits actually it's 53 because one of them is hidden
Dialogue: 1,0:07:07.72,0:07:09.64,720cn,,0,0,0,,我后面会讲到这儿
Dialogue: 2,0:07:07.72,0:07:09.64,720en,,0,0,0,,I will talk about this guy later
Dialogue: 1,0:07:10.04,0:07:17.38,720cn,,0,0,0,,这一部分叫做有效数字，如果你说美式英语，你可能会叫它mantissa
Dialogue: 2,0:07:10.04,0:07:17.38,720en,,0,0,0,,this part is called significant if you are American English user you probably call it mantissa
Dialogue: 1,0:07:18.08,0:07:20.35,720cn,,0,0,0,,有时候也被叫做小数部分
Dialogue: 2,0:07:18.08,0:07:20.35,720en,,0,0,0,,sometimes it's referred as fraction
Dialogue: 1,0:07:20.35,0:07:26.40,720cn,,0,0,0,,基本上这52位表示数字的值
Dialogue: 2,0:07:20.36,0:07:26.40,720en,,0,0,0,,but basically this 52 bits are representing the binary digits of our number
Dialogue: 1,0:07:26.40,0:07:30.90,720cn,,0,0,0,,一部分用来表示数字的整数部分
Dialogue: 2,0:07:26.42,0:07:30.90,720en,,0,0,0,,and some of them are used to represent the integer part of our number
Dialogue: 1,0:07:31.70,0:07:33.22,720cn,,0,0,0,,另外一部分是小数部分
Dialogue: 2,0:07:31.70,0:07:33.22,720en,,0,0,0,,and the others are for the fraction
Dialogue: 1,0:07:33.22,0:07:37.54,720cn,,0,0,0,,这里我用一个圆点将它们分隔开来
Dialogue: 2,0:07:33.22,0:07:37.54,720en,,0,0,0,,and I use this point in here to show where this split happens
Dialogue: 1,0:07:37.54,0:07:42.92,720cn,,0,0,0,,圆点左边表示整数部分
Dialogue: 2,0:07:37.54,0:07:43.06,720en,,0,0,0,,so this bits on the left of this point are used to represent the integer part
Dialogue: 1,0:07:43.06,0:07:44.92,720cn,,0,0,0,,圆点右边表示小数部分
Dialogue: 2,0:07:43.08,0:07:44.92,720en,,0,0,0,,and the rest is for the fraction
Dialogue: 1,0:07:46.38,0:07:53.91,720cn,,0,0,0,,余下的11位是指数，它相当于一个乘数
Dialogue: 2,0:07:46.38,0:07:53.91,720en,,0,0,0,,and the remaining 11 bits is the exponent and the exponent is kind of a multiplier
Dialogue: 1,0:07:53.91,0:08:00.58,720cn,,0,0,0,,用来和有效数字相乘，最终结果就是我们的数值
Dialogue: 2,0:07:53.92,0:08:00.58,720en,,0,0,0,,that is used to scale the value given by the significant to give us the final value of our number
Dialogue: 1,0:08:00.58,0:08:08.74,720cn,,0,0,0,,我知道这很难理解，所以让我来举个例子
Dialogue: 2,0:08:00.58,0:08:08.74,720en,,0,0,0,,and I'm pretty sure it's quite confusing at this point so let me give you a little bit of analogy
Dialogue: 1,0:08:09.64,0:08:16.50,720cn,,0,0,0,,我想你肯定见过数字写成这样的形式
Dialogue: 2,0:08:09.64,0:08:16.78,720en,,0,0,0,,I hope that you've at least at some point of your life seen a number written like this
Dialogue: 1,0:08:16.78,0:08:20.68,720cn,,0,0,0,,这叫做科学计数法
Dialogue: 2,0:08:16.78,0:08:20.84,720en,,0,0,0,,it's so called exponential or scientific notation
Dialogue: 1,0:08:20.84,0:08:25.94,720cn,,0,0,0,,这种计数法里面我们把一个数字分为两部分
Dialogue: 2,0:08:20.86,0:08:25.97,720en,,0,0,0,,so in this notation we also have a number divided into two parts
Dialogue: 1,0:08:25.97,0:08:31.64,720cn,,0,0,0,,一部分是有效数字
Dialogue: 2,0:08:26.00,0:08:31.64,720en,,0,0,0,,this is there is this part it represents the significant digits of our numbers
Dialogue: 1,0:08:31.64,0:08:36.92,720cn,,0,0,0,,数字中所有的数位，也叫做有效数字
Dialogue: 2,0:08:31.64,0:08:36.92,720en,,0,0,0,,so all the digits we want to have in our number and it's also called significant
Dialogue: 1,0:08:37.30,0:08:42.98,720cn,,0,0,0,,我们将这个数字乘以10的n次方，最终结果就是我们的数字
Dialogue: 2,0:08:37.30,0:08:43.14,720en,,0,0,0,,and we compute number by multiplying it times 10 to the power of the exponent
Dialogue: 1,0:08:43.14,0:08:46.20,720cn,,0,0,0,,所以说指数相当于一个放大的因子
Dialogue: 2,0:08:43.16,0:08:46.20,720en,,0,0,0,,so the exponent is kind of a scaling factor
Dialogue: 1,0:08:46.20,0:08:50.56,720cn,,0,0,0,,指数越大我们的数值就越大
Dialogue: 2,0:08:46.22,0:08:50.57,720en,,0,0,0,,so the bigger the exponent gets the bigger our number will be
Dialogue: 1,0:08:50.57,0:08:55.84,720cn,,0,0,0,,指数越小，我们的数值也越小
Dialogue: 2,0:08:50.60,0:08:55.84,720en,,0,0,0,,and the smaller the exponent gets the smaller value of our number will have
Dialogue: 1,0:08:56.52,0:09:03.26,720cn,,0,0,0,,指数的大小影响小数点的位置
Dialogue: 2,0:08:56.52,0:09:03.33,720en,,0,0,0,,and we can look at this exponent as kind of defining the position of the point in our representation
Dialogue: 1,0:09:03.33,0:09:09.00,720cn,,0,0,0,,因为指数变大时，小数点向右移
Dialogue: 2,0:09:03.36,0:09:09.00,720en,,0,0,0,,because when the exponent gets higher the point kind of moves to the right
Dialogue: 1,0:09:09.00,0:09:10.78,720cn,,0,0,0,,数字也就越大
Dialogue: 2,0:09:09.02,0:09:10.78,720en,,0,0,0,,and makes this number bigger
Dialogue: 1,0:09:11.64,0:09:15.76,720cn,,0,0,0,,指数变小，小数点向左移
Dialogue: 2,0:09:11.64,0:09:15.88,720en,,0,0,0,,and when the exponent gets smaller it kind of moves the point to the left
Dialogue: 1,0:09:15.88,0:09:18.22,720cn,,0,0,0,,数字也就越小
Dialogue: 2,0:09:15.90,0:09:18.49,720en,,0,0,0,,making the numbers smaller and smaller
Dialogue: 1,0:09:18.49,0:09:26.98,720cn-2,,0,0,0,,二进制表示法中的有效数字和指数部分和科学计数法中相同的
Dialogue: 2,0:09:18.52,0:09:26.98,720en,,0,0,0,,and actually the roles of significant and exponent in this binary notation for the floating point numbers are exactly the same
Dialogue: 1,0:09:27.58,0:09:31.64,720cn,,0,0,0,,所以我们倒回去仔细研究一下它是如何工作的
Dialogue: 2,0:09:27.58,0:09:31.64,720en,,0,0,0,,so let's get back to it and see how it works and more details
Dialogue: 1,0:09:33.34,0:09:37.16,720cn,,0,0,0,,符号位就不用多说了
Dialogue: 2,0:09:33.34,0:09:37.26,720en,,0,0,0,,so the sign bit there is not much to say about this guy
Dialogue: 1,0:09:37.26,0:09:40.97,720cn,,0,0,0,,如果符号位是0，说明是正数
Dialogue: 2,0:09:37.28,0:09:40.97,720en,,0,0,0,,f its value is zero the number is positive
Dialogue: 1,0:09:40.97,0:09:43.70,720cn,,0,0,0,,因为计算的是-1的0次方
Dialogue: 2,0:09:40.98,0:09:43.82,720en,,0,0,0,,because it's counted as the power of minus one
Dialogue: 1,0:09:43.82,0:09:45.51,720cn,,0,0,0,,如果符号位置为1
Dialogue: 2,0:09:43.84,0:09:45.51,720en,,0,0,0,,and if we turn it to one
Dialogue: 1,0:09:45.51,0:09:48.58,720cn,,0,0,0,,就变成负数了，很简单
Dialogue: 2,0:09:45.52,0:09:48.58,720en,,0,0,0,,our number becomes negative simple as that
Dialogue: 1,0:09:49.18,0:09:52.64,720cn,,0,0,0,,指数部分比较有意思
Dialogue: 2,0:09:49.18,0:09:52.64,720en,,0,0,0,,exponent is a little bit more interesting
Dialogue: 1,0:09:53.06,0:09:56.12,720cn,,0,0,0,,我们有11位来表示指数
Dialogue: 2,0:09:53.06,0:09:56.12,720en,,0,0,0,,so we have eleven bits to represent the exponent
Dialogue: 1,0:09:56.12,0:10:02.56,720cn,,0,0,0,,指数是一个整数，所以可以表示0到2047之间的数
Dialogue: 2,0:09:56.14,0:10:02.79,720en,,0,0,0,,and the exponent that is an integer value so we can represent the number from 0 to 2047
Dialogue: 1,0:10:02.79,0:10:08.52,720cn,,0,0,0,,但是因为我们想让指数可以是正值或者负值
Dialogue: 2,0:10:02.82,0:10:08.52,720en,,0,0,0,,but we would actually want exponent to have negative and positive values
Dialogue: 1,0:10:08.52,0:10:13.16,720cn,,0,0,0,,所以这里实际上使用的是移码表示法
Dialogue: 2,0:10:08.52,0:10:13.37,720en,,0,0,0,,so what is actually used in so called offset binary notation
Dialogue: 1,0:10:13.37,0:10:16.68,720cn,,0,0,0,,我们计算出指数部分的值
Dialogue: 2,0:10:13.40,0:10:16.68,720en,,0,0,0,,so we take the number computed from the powers of two
Dialogue: 1,0:10:16.68,0:10:22.79,720cn,,0,0,0,,然后减去1023
Dialogue: 2,0:10:16.68,0:10:22.79,720en,,0,0,0,,of the from the bits of exponent this one and we subtract 1023 from it
Dialogue: 1,0:10:22.79,0:10:25.12,720cn,,0,0,0,,正好是取值范围的一半
Dialogue: 2,0:10:22.82,0:10:25.12,720en,,0,0,0,,it's exactly the half of the range
Dialogue: 1,0:10:25.12,0:10:34.16,720cn,,0,0,0,,所以当指数部分表示为1023时
Dialogue: 2,0:10:25.12,0:10:34.16,720en,,0,0,0,,so when our value computed from the exponent bits gets exactly to this point of 1023
Dialogue: 1,0:10:34.16,0:10:36.90,720cn,,0,0,0,,实际使用的指数为0
Dialogue: 2,0:10:34.16,0:10:36.93,720en,,0,0,0,,our exponent will be 0
Dialogue: 1,0:10:36.93,0:10:40.16,720cn,,0,0,0,,当它的值变小，指数就是负值
Dialogue: 2,0:10:36.96,0:10:40.16,720en,,0,0,0,,and when it gets lower, the exponent will be negative
Dialogue: 1,0:10:40.16,0:10:43.22,720cn,,0,0,0,,当它的值变大，指数就是正值
Dialogue: 2,0:10:40.16,0:10:43.22,720en,,0,0,0,,when it's higher the exponent will be positive
Dialogue: 1,0:10:43.84,0:10:46.92,720cn,,0,0,0,,这个数，指数的值
Dialogue: 2,0:10:43.84,0:10:46.92,720en,,0,0,0,,and this number, the value for the exponent
Dialogue: 1,0:10:46.92,0:10:51.78,720cn,,0,0,0,,实际上定义有效数字部分小数点的位置
Dialogue: 2,0:10:46.92,0:10:51.78,720en,,0,0,0,,is actually defining the position of this point in the significant
Dialogue: 1,0:10:52.56,0:10:59.82,720cn-2,,0,0,0,,它决定了多少位是整数部分，多少位是小数部分
Dialogue: 2,0:10:52.56,0:10:59.82,720en,,0,0,0,,so it defines how many bits we have for the integer part of the number and how many are left for the fraction part
Dialogue: 1,0:11:00.30,0:11:07.59,720cn-2,,0,0,0,,指数越大，整数部分的数位越多，数值越大
Dialogue: 2,0:11:00.30,0:11:07.59,720en,,0,0,0,,so the bigger our exponent gets the more bits we have for the integer part and the bigger our integer value gets
Dialogue: 1,0:11:07.59,0:11:16.02,720cn,,0,0,0,, 指数越小，小数点向左移，整数部分的数位变少
Dialogue: 2,0:11:07.60,0:11:16.02,720en,,0,0,0,,the smaller exponent is the point will move to the left making/giving us less bits for the integer part
Dialogue: 1,0:11:16.02,0:11:19.65,720cn,,0,0,0,,这就是为什么叫做“浮点”数
Dialogue: 2,0:11:16.02,0:11:19.65,720en,,0,0,0,,and actually that's why it's called the floating point
Dialogue: 1,0:11:19.65,0:11:24.86,720cn,,0,0,0,,因为小数点的位置是变化的，取决于指数的值
Dialogue: 2,0:11:19.66,0:11:24.86,720en,,0,0,0,,because the position of the point is depends on the value of the exponent
Dialogue: 1,0:11:26.16,0:11:29.44,720cn,,0,0,0,,现在来看看最重要的部分
Dialogue: 2,0:11:26.16,0:11:29.44,720en,,0,0,0,,so now let's have a look at the most important part
Dialogue: 1,0:11:29.44,0:11:30.66,720cn,,0,0,0,,有效数字
Dialogue: 2,0:11:29.44,0:11:30.66,720en,,0,0,0,,the significant
Dialogue: 1,0:11:32.26,0:11:36.27,720cn,,0,0,0,,之前说过了，有效数字有52位
Dialogue: 2,0:11:32.26,0:11:36.27,720en,,0,0,0,,as I told you already we have 52 bits
Dialogue: 1,0:11:36.27,0:11:41.98,720cn,,0,0,0,,这些红色的数字，第一位是隐藏的
Dialogue: 2,0:11:36.28,0:11:41.98,720en,,0,0,0,,these are these red ones and here this first guy is this hidden bit
Dialogue: 1,0:11:42.32,0:11:44.16,720cn,,0,0,0,,我们将它放在这儿
Dialogue: 2,0:11:42.32,0:11:44.16,720en,,0,0,0,,we can save him here yeah
Dialogue: 1,0:11:46.26,0:11:49.86,720cn,,0,0,0,,我们能够看到它的值，但是无法改变它的值
Dialogue: 2,0:11:46.26,0:11:49.93,720en,,0,0,0,,and we can see him because we don't actually control its value
Dialogue: 1,0:11:49.93,0:11:52.54,720cn,,0,0,0,,它的值永远是1
Dialogue: 2,0:11:49.96,0:11:52.78,720en,,0,0,0,,its value is always assumed to be one
Dialogue: 1,0:11:52.78,0:11:56.34,720cn,,0,0,0,,所以我们不把它算作64位的一部分
Dialogue: 2,0:11:52.78,0:11:56.34,720en,,0,0,0,,so that's why we don't have to put them into 64 bits
Dialogue: 1,0:11:56.34,0:11:58.18,720cn,,0,0,0,,因为我们不能把它的值变成0
Dialogue: 2,0:11:56.34,0:11:58.18,720en,,0,0,0,,because we can't change it to 0
Dialogue: 1,0:12:00.34,0:12:06.90,720cn,,0,0,0,,为了解释有效数字部分是如何工作的，先来点简单的，比如1
Dialogue: 2,0:12:00.34,0:12:06.90,720en,,0,0,0,,so to explain you how this significant works let's start with something simple like number 1
Dialogue: 1,0:12:07.70,0:12:10.92,720cn,,0,0,0,,对于数字1来说，指数部分为0
Dialogue: 2,0:12:07.70,0:12:11.08,720en,,0,0,0,,so for number one our exponent is zero
Dialogue: 1,0:12:11.08,0:12:17.46,720cn,,0,0,0,,所以小数点的位置在这里，它的左边有1位
Dialogue: 2,0:12:11.10,0:12:17.46,720en,,0,0,0,,so it puts our point in here so we have one bit on the left hand side
Dialogue: 1,0:12:17.46,0:12:20.08,720cn,,0,0,0,,这一位表示的是整数部分
Dialogue: 2,0:12:17.46,0:12:20.08,720en,,0,0,0,,this one bit representing our integer part
Dialogue: 1,0:12:20.08,0:12:22.70,720cn,,0,0,0,,表示2的0次幂
Dialogue: 2,0:12:20.08,0:12:22.75,720en,,0,0,0,,and it represents two to the power of zero
Dialogue: 1,0:12:22.75,0:12:28.46,720cn,,0,0,0,,等于1，因为现在仅有一位表示整数，所以无法表示更大的数
Dialogue: 2,0:12:22.78,0:12:28.46,720en,,0,0,0,,so it's 1 but we have only one bit for the integer we can't represent any bigger number
Dialogue: 1,0:12:28.46,0:12:31.36,720cn,,0,0,0,,如果我们想表示数字2
Dialogue: 2,0:12:28.46,0:12:31.57,720en,,0,0,0,,so if we try to represent the number 2
Dialogue: 1,0:12:31.57,0:12:35.69,720cn,,0,0,0,,我们需要将小数点向右移动，通过改变指数
Dialogue: 2,0:12:31.60,0:12:35.69,720en,,0,0,0,,we have to move the point to the right by changing the exponent
Dialogue: 1,0:12:35.69,0:12:38.43,720cn,,0,0,0,,现在呢我们整数部分有两位了
Dialogue: 2,0:12:35.72,0:12:38.43,720en,,0,0,0,,so now we have two bits for the integer part
Dialogue: 1,0:12:38.43,0:12:42.98,720cn,,0,0,0,,第一位表示2的1次幂
Dialogue: 2,0:12:38.44,0:12:42.98,720en,,0,0,0,,this first bit is representing 2 to the power of 1 at this point
Dialogue: 1,0:12:42.98,0:12:44.58,720cn,,0,0,0,,等于2
Dialogue: 2,0:12:42.98,0:12:44.58,720en,,0,0,0,,so it gives us 2
Dialogue: 1,0:12:44.58,0:12:48.35,720cn,,0,0,0,,另一个表示2的0次幂
Dialogue: 2,0:12:44.58,0:12:48.35,720en,,0,0,0,,and the other one is representing 2 to the power of 0
Dialogue: 1,0:12:48.35,0:12:55.56,720cn,,0,0,0,,于是我们得到了数字3， 但是同样，我们的整数部分只有两位
Dialogue: 2,0:12:48.36,0:12:55.56,720en,,0,0,0,,so we can represent also number 3 but again we just used our 2 bits in the integer part
Dialogue: 1,0:12:55.56,0:13:02.05,720cn,,0,0,0,,为了表示数字4，我们需要再一次将小数点向右移，通过改变指数
Dialogue: 2,0:12:55.56,0:13:02.05,720en,,0,0,0,,so to represent number 4 we have to again move the point to the right by changing the exponent
Dialogue: 1,0:13:02.05,0:13:05.30,720cn,,0,0,0,,所以现在我们得到了——抱歉
Dialogue: 2,0:13:02.08,0:13:05.30,720en,,0,0,0,,so now we have oops sorry yeah
Dialogue: 1,0:13:17.72,0:13:20.92,720cn,,0,0,0,,我记得刚才是4
Dialogue: 2,0:13:17.72,0:13:20.92,720en,,0,0,0,,so I was at 4 I guess
Dialogue: 1,0:13:21.30,0:13:25.69,720cn,,0,0,0,,于是现在我们整数部分有3位了
Dialogue: 2,0:13:21.30,0:13:25.69,720en,,0,0,0,,so now we have three bits for the integer part
Dialogue: 1,0:13:25.69,0:13:28.14,720cn,,0,0,0,,第一个表示2的2次幂
Dialogue: 2,0:13:25.70,0:13:28.14,720en,,0,0,0,,the first one represents two to the power of two
Dialogue: 1,0:13:28.14,0:13:30.76,720cn,,0,0,0,,最后一个表示2的0次幂
Dialogue: 2,0:13:28.16,0:13:30.76,720en,,0,0,0,,the last one represents two to the power of zero
Dialogue: 1,0:13:31.66,0:13:39.93,720cn-2,,0,0,0,,所以数字越大，我们需要的整数部分的位越多
Dialogue: 2,0:13:31.66,0:13:39.93,720en,,0,0,0,,so the bigger number we want to represent in terms of the integer value the more bits we will need for the integer part
Dialogue: 1,0:13:39.93,0:13:42.82,720cn,,0,0,0,,现在我们来看看小数部分
Dialogue: 2,0:13:39.94,0:13:42.82,720en,,0,0,0,,now let's see how the fraction part works
Dialogue: 1,0:13:43.22,0:13:48.92,720cn,,0,0,0,,小数点后第一位表示2的-1次幂
Dialogue: 2,0:13:43.22,0:13:49.02,720en,,0,0,0,,the first bit after the point represents 2 to the power of minus one
Dialogue: 1,0:13:49.02,0:13:53.88,720cn,,0,0,0,,是1/2
Dialogue: 2,0:13:49.04,0:13:54.13,720en,,0,0,0,,so it gives us 1/2 to the power of one so it gives us a half
Dialogue: 1,0:13:54.13,0:14:00.58,720cn,,0,0,0,,所以通过小数点右面第一位我们能表示小数0.5
Dialogue: 2,0:13:54.16,0:14:00.58,720en,,0,0,0,,so by changing this first bit after the point we can represent 0.5 fraction
Dialogue: 1,0:14:00.58,0:14:04.50,720cn,,0,0,0,,下一位表示2的-2次幂
Dialogue: 2,0:14:00.60,0:14:04.50,720en,,0,0,0,,the next one is representing 2 to the power of minus 2
Dialogue: 1,0:14:04.50,0:14:11.32,720cn,,0,0,0,,结果是1/4，下一位是2的-3次幂，1/8，后面同理
Dialogue: 2,0:14:04.50,0:14:11.32,720en,,0,0,0,,so it gives us a quarter next one is 2 to the power of minus 3 it's 1/8 and so on and so on
Dialogue: 1,0:14:11.32,0:14:19.06,720cn-2,,0,0,0,,能看出小数部分的越往后表示的数字越小，是2的-n次幂
Dialogue: 2,0:14:11.32,0:14:19.06,720en,,0,0,0,,every single bit and the fraction part represents smaller and smaller fraction based on the inverse power of 2
Dialogue: 1,0:14:19.46,0:14:22.06,720cn,,0,0,0,,这告诉我们
Dialogue: 2,0:14:19.46,0:14:22.07,720en,,0,0,0,,so what it tells us is that
Dialogue: 1,0:14:22.07,0:14:29.38,720cn,,0,0,0,,我们表示的小数，必须是2的-n次幂加和
Dialogue: 2,0:14:22.10,0:14:29.38,720en,,0,0,0,,we can only build the fraction of our number by adding up these inverted powers of 2
Dialogue: 1,0:14:29.38,0:14:34.48,720cn,,0,0,0,,不幸的是，并非所有十进制的小数都能通过2的-n次幂加和得到
Dialogue: 2,0:14:29.38,0:14:34.78,720en,,0,0,0,,and unfortunately not all of decimal fractions can be represented this way
Dialogue: 1,0:14:34.78,0:14:38.78,720cn,,0,0,0,,我们以0.1为例
Dialogue: 2,0:14:34.78,0:14:38.78,720en,,0,0,0,,so if we take our 0.1 example
Dialogue: 1,0:14:39.60,0:14:45.08,720cn,,0,0,0,,可以看出为了得到0.2，我们将越来越小的2的-n次幂加起来
Dialogue: 2,0:14:39.60,0:14:45.08,720en,,0,0,0,,we can see that to form 0.1 we are adding smaller and smaller powers of two
Dialogue: 1,0:14:45.08,0:14:50.32,720cn,,0,0,0,,但事实上我们永远得不到精确的0.1的值
Dialogue: 2,0:14:45.10,0:14:50.32,720en,,0,0,0,,but actually they will never add up to exactly 0.1 value
Dialogue: 1,0:14:50.32,0:14:56.38,720cn,,0,0,0,,所以说存储0.1的时候已经有一点误差
Dialogue: 2,0:14:50.34,0:14:56.38,720en,,0,0,0,,so this value is already stored in this representation with a little bit of error
Dialogue: 1,0:14:56.38,0:15:00.32,720cn,,0,0,0,,我们做计算时，误差会加起来
Dialogue: 2,0:14:56.38,0:15:00.32,720en,,0,0,0,,and these errors add up when we do some computations on these numbers
Dialogue: 1,0:15:00.32,0:15:02.80,720cn,,0,0,0,,在某一时刻，误差就会显示出来
Dialogue: 2,0:15:00.32,0:15:02.80,720en,,0,0,0,,and at some point they they show up
Dialogue: 1,0:15:04.78,0:15:11.20,720cn,,0,0,0,,所以这种表示法导致的不精确是由于两个原因
Dialogue: 2,0:15:04.78,0:15:11.20,720en,,0,0,0,,so the limit of this representation in terms of accuracy of the fractions is based on two factors
Dialogue: 1,0:15:11.20,0:15:16.74,720cn,,0,0,0,,第一个原因 我们是通过将2的-n次幂加和得到小数
Dialogue: 2,0:15:11.22,0:15:16.81,720en,,0,0,0,,first factor is that we are building our fraction from the inverse power of two
Dialogue: 1,0:15:16.81,0:15:22.14,720cn,,0,0,0,,另一个原因是我们的有效数字位只有有限的52位
Dialogue: 2,0:15:16.84,0:15:22.14,720en,,0,0,0,,and the other factor is that we actually have quite limited 52 bits of significant
Dialogue: 1,0:15:22.14,0:15:25.48,720cn,,0,0,0,,我们表示不了更小的数
Dialogue: 2,0:15:22.14,0:15:25.48,720en,,0,0,0,,we can't represent the smaller values
Dialogue: 1,0:15:26.24,0:15:28.78,720cn,,0,0,0,,更重要的是
Dialogue: 2,0:15:26.24,0:15:28.78,720en,,0,0,0,,what is even more important is that
Dialogue: 1,0:15:29.24,0:15:33.70,720cn,,0,0,0,,整数部分值越大
Dialogue: 2,0:15:29.24,0:15:33.70,720en,,0,0,0,,the bigger number we get in terms of the integer value
Dialogue: 1,0:15:33.70,0:15:36.88,720cn,,0,0,0,,我们在整数部分就需要更多的数位
Dialogue: 2,0:15:33.70,0:15:36.88,720en,,0,0,0,,so when we need more and more bits for the integer part
Dialogue: 1,0:15:36.88,0:15:39.58,720cn,,0,0,0,,小数部分可以使用的数位就越少
Dialogue: 2,0:15:36.88,0:15:40.03,720en,,0,0,0,,the less bits we have left for the fraction part
Dialogue: 1,0:15:40.03,0:15:44.98,720cn,,0,0,0,,所以当我们将小数点移到最右侧时
Dialogue: 2,0:15:40.06,0:15:44.98,720en,,0,0,0,,so when we move the point right to the end of this representation
Dialogue: 1,0:15:45.80,0:15:50.16,720cn,,0,0,0,,我们来看看对于这么大的数字
Dialogue: 2,0:15:45.80,0:15:50.16,720en,,0,0,0,,let's see to this point for such a large integer value
Dialogue: 1,0:15:50.16,0:15:55.78,720cn,,0,0,0,,我们只有一位留给小数部分,所以我们只能表示0.5
Dialogue: 2,0:15:50.16,0:15:55.78,720en,,0,0,0,,we have only one bit left for the fraction part so we can only represent the half
Dialogue: 1,0:15:55.78,0:15:59.14,720cn,,0,0,0,,对于这么大的数来说，我们表示不了其他的小数
Dialogue: 2,0:15:55.78,0:15:59.14,720en,,0,0,0,,we can't represent any other fraction for such a large numbers
Dialogue: 1,0:16:00.22,0:16:05.62,720cn,,0,0,0,,如果我们再将小数点右移，会发生什么呢？
Dialogue: 2,0:16:00.22,0:16:05.62,720en,,0,0,0,,so what happens if we move the point even more to the right
Dialogue: 1,0:16:05.62,0:16:08.17,720cn,,0,0,0,,如果指数等于52
Dialogue: 2,0:16:05.64,0:16:08.17,720en,,0,0,0,,if the exponent is equal to 52
Dialogue: 1,0:16:08.17,0:16:11.98,720cn,,0,0,0,,有效数字部分所有的位都来表示整数部分
Dialogue: 2,0:16:08.18,0:16:11.97,720en,,0,0,0,,we have all the bits of the significant used for the integer value
Dialogue: 1,0:16:11.97,0:16:14.56,720cn,,0,0,0,,小数部分没有数位可用了
Dialogue: 2,0:16:11.98,0:16:14.56,720en,,0,0,0,,there is no bit left for the fraction part
Dialogue: 1,0:16:14.56,0:16:18.92,720cn,,0,0,0,,所以只能表示整数
Dialogue: 2,0:16:14.58,0:16:18.92,720en,,0,0,0,,so from this point we can only represent integers value
Dialogue: 1,0:16:22.52,0:16:27.70,720cn,,0,0,0,,有效数字能表示的最大的整数
Dialogue: 2,0:16:22.52,0:16:27.70,720en,,0,0,0,,so the biggest integer value that actually fits into this significant
Dialogue: 1,0:16:28.18,0:16:34.32,720cn,,0,0,0,,就是这个数字，我们用了有效数字的所有数位来表示这个数
Dialogue: 2,0:16:28.18,0:16:34.32,720en,,0,0,0,,is this one we've used all the bits in the significant part to represent this number
Dialogue: 1,0:16:34.32,0:16:38.48,720cn,,0,0,0,,那如果我们想表示更大的数呢？
Dialogue: 2,0:16:34.34,0:16:38.48,720en,,0,0,0,,now what would happen if we try to represent the bigger number
Dialogue: 1,0:16:38.48,0:16:41.64,720cn,,0,0,0,,我们看看，改一下这里
Dialogue: 2,0:16:38.48,0:16:41.64,720en,,0,0,0,,let's see let's change that
Dialogue: 1,0:16:42.26,0:16:44.38,720cn,,0,0,0,,和我们预想的一样
Dialogue: 2,0:16:42.26,0:16:44.38,720en,,0,0,0,,what happens is kind of what we expected
Dialogue: 1,0:16:44.38,0:16:46.08,720cn,,0,0,0,,我们将小数点右移
Dialogue: 2,0:16:44.38,0:16:46.08,720en,,0,0,0,,we moved the point to the right
Dialogue: 1,0:16:46.08,0:16:48.81,720cn,,0,0,0,,为整数部分多展开一位
Dialogue: 2,0:16:46.08,0:16:48.81,720en,,0,0,0,,to make a more space for the integer part
Dialogue: 1,0:16:48.81,0:16:57.48,720cn,,0,0,0,,所以我们整数部分有53位， 但事实上不存在第53位
Dialogue: 2,0:16:48.82,0:16:57.62,720en,,0,0,0,,so we have right now 53 bits for the integer part but actually there is no bit left there
Dialogue: 1,0:16:57.62,0:17:00.11,720cn,,0,0,0,,那这个数值是怎么计算的呢？
Dialogue: 2,0:16:57.64,0:17:00.11,720en,,0,0,0,,so how the number is computed
Dialogue: 1,0:17:00.11,0:17:07.30,720cn,,0,0,0,,所有不存在的数位，都被当成0
Dialogue: 2,0:17:00.12,0:17:07.30,720en,,0,0,0,,so what happens is that it's assumed that all these bits that are missing are zeros
Dialogue: 1,0:17:07.30,0:17:11.38,720cn,,0,0,0,,所以说这个数字可以被准确表示的
Dialogue: 2,0:17:07.30,0:17:11.38,720en,,0,0,0,,so this number is actually accurately represented
Dialogue: 1,0:17:11.38,0:17:15.04,720cn,,0,0,0,,因为最后一位被当做是0
Dialogue: 2,0:17:11.38,0:17:15.04,720en,,0,0,0,,because this last bit is assumed to be zero
Dialogue: 1,0:17:15.04,0:17:19.28,720cn,,0,0,0,,如果给这个数加1，会发生什么呢？
Dialogue: 2,0:17:15.04,0:17:19.28,720en,,0,0,0,,but what would happen if we try to add 1 to it again
Dialogue: 1,0:17:19.28,0:17:23.69,720cn,,0,0,0,,我们无法进行加1操作，因为改变不了最后一位的值
Dialogue: 2,0:17:19.28,0:17:23.69,720en,,0,0,0,, we can't because we can't change the value of this last bit
Dialogue: 1,0:17:23.69,0:17:26.41,720cn,,0,0,0,,我们控制不了最后一位的值，它永远是0
Dialogue: 2,0:17:23.70,0:17:26.41,720en,,0,0,0,,because we don't control it it's it's always zero
Dialogue: 1,0:17:26.41,0:17:29.72,720cn,,0,0,0,,我们能控制的最后一位是这个
Dialogue: 2,0:17:26.42,0:17:29.72,720en,,0,0,0,,so the last bit we actually control is this one
Dialogue: 1,0:17:29.72,0:17:35.28,720cn,,0,0,0,,它代表2的1次幂，所以我们只能对这个数字加2
Dialogue: 2,0:17:29.72,0:17:35.46,720en,,0,0,0,,and it represents two to the power of one so we can only add 2 to this number
Dialogue: 1,0:17:35.46,0:17:39.96,720cn,,0,0,0,,所以当指数等于53时
Dialogue: 2,0:17:35.48,0:17:39.96,720en,,0,0,0,,so from this point when the exponent is equal to 53
Dialogue: 1,0:17:39.96,0:17:46.70,720cn,,0,0,0,,我们只能表示间隔2的数，直到这里
Dialogue: 2,0:17:39.96,0:17:46.70,720en,,0,0,0,,we can only represent every second integer until we get to this point
Dialogue: 1,0:17:47.72,0:17:54.58,720cn,,0,0,0,,为了表示更大的数我们需要再一次加2
Dialogue: 2,0:17:47.72,0:17:55.01,720en,,0,0,0,,and again to represent the bigger number we again have to add 2 to it
Dialogue: 1,0:17:55.01,0:17:57.82,720cn,,0,0,0,,我们将小数点右移
Dialogue: 2,0:17:55.04,0:17:57.82,720en,,0,0,0,,we will move point to the right
Dialogue: 1,0:17:57.82,0:18:02.48,720cn,,0,0,0,,现在我们有两个数位只能是0
Dialogue: 2,0:17:57.82,0:18:02.48,720en,,0,0,0,,so right now we have 2 bits that are assumed to be 0
Dialogue: 1,0:18:02.48,0:18:08.12,720cn,,0,0,0,,我们能够控制的最后一位代表2的2次幂
Dialogue: 2,0:18:02.50,0:18:08.12,720en,,0,0,0,,so the last value the last bit of our control is representing 2 to the power of 2
Dialogue: 1,0:18:08.12,0:18:09.40,720cn,,0,0,0,,是4
Dialogue: 2,0:18:08.12,0:18:09.56,720en,,0,0,0,,so it's 4
Dialogue: 1,0:18:09.56,0:18:15.56,720cn,,0,0,0,,所以当指数等于54时，我们只能表示间隔为4的数
Dialogue: 2,0:18:09.58,0:18:15.83,720en,,0,0,0,,so we can represent only every 4th integer for exponent equal to 54
Dialogue: 1,0:18:15.83,0:18:24.06,720cn-2,,0,0,0,,指数越大，我们能表示整数之间的间隔就越大
Dialogue: 2,0:18:15.86,0:18:24.06,720en,,0,0,0,,so the bigger the exponent gets the bigger gaps we will have between the integers values we can represent
Dialogue: 1,0:18:24.06,0:18:30.12,720cn,,0,0,0,,所以从指数等于52开始
Dialogue: 2,0:18:24.06,0:18:30.12,720en,,0,0,0,,so actually starting from this exponent 52
Dialogue: 1,0:18:30.52,0:18:32.70,720cn,,0,0,0,,我们不能表示连续的整数了
Dialogue: 2,0:18:30.52,0:18:32.70,720en,,0,0,0,,we already have gaps between the numbers
Dialogue: 1,0:18:32.70,0:18:37.78,720cn,,0,0,0,,所以说对于这么大的数任何计算都会发生错误
Dialogue: 2,0:18:32.70,0:18:38.25,720en,,0,0,0,,so actually any operations on on such a large integers will have some error
Dialogue: 1,0:18:38.25,0:18:42.48,720cn,,0,0,0,,同样这种错误在小数里也会发生
Dialogue: 2,0:18:38.28,0:18:42.48,720en,,0,0,0,,and similar thing happens on the other side of the significant
Dialogue: 1,0:18:42.48,0:18:47.28,720cn,,0,0,0,,我们让数字变小，也许不要这么小……
Dialogue: 2,0:18:42.48,0:18:47.28,720en,,0,0,0,,if we make it smaller maybe not that small
Dialogue: 1,0:18:51.00,0:18:53.76,720cn,,0,0,0,,让指数等于-1
Dialogue: 2,0:18:51.00,0:18:53.76,720en,,0,0,0,,when we have the exponent value of -1
Dialogue: 1,0:18:53.76,0:18:57.75,720cn,,0,0,0,,这时小数点就是隐藏位后面
Dialogue: 2,0:18:53.76,0:18:57.75,720en,,0,0,0,,so our point is right before the hidden bit
Dialogue: 1,0:18:57.75,0:19:00.71,720cn,,0,0,0,,隐藏位表示1/2
Dialogue: 2,0:18:57.76,0:19:00.71,720en,,0,0,0,,this hidden bit represents 1/2
Dialogue: 1,0:19:00.71,0:19:04.78,720cn,,0,0,0,,有效数字的其他数位表示越来越小的2的-n次幂
Dialogue: 2,0:19:00.72,0:19:04.78,720en,,0,0,0,,and every other bit in the significant represents smaller and smaller powers of 2
Dialogue: 1,0:19:05.80,0:19:08.50,720cn,,0,0,0,,当我们将小数点左移
Dialogue: 2,0:19:05.80,0:19:08.50,720en,,0,0,0,,and when we move the point to left
Dialogue: 1,0:19:09.62,0:19:13.40,720cn,,0,0,0,,我们得到不存在的数位，值都为0
Dialogue: 2,0:19:09.62,0:19:13.67,720en,,0,0,0,,we are getting some missing bits assumes to be zeros
Dialogue: 1,0:19:13.67,0:19:18.61,720cn,,0,0,0,,所以有效数字的第一位表示越来越小的2的-n次幂
Dialogue: 2,0:19:13.70,0:19:18.61,720en,,0,0,0,,our first bit insignificant represents smaller and smaller power of 2
Dialogue: 1,0:19:18.61,0:19:22.82,720cn,,0,0,0,,越来越接近0
Dialogue: 2,0:19:18.62,0:19:22.82,720en,,0,0,0,,so we are getting closer and closer to 0
Dialogue: 1,0:19:23.68,0:19:31.50,720cn,,0,0,0,,但当隐藏位值是1
Dialogue: 2,0:19:23.68,0:19:31.78,720en,,0,0,0,,but when we have this bit the hidden bit assumed to be 1
Dialogue: 1,0:19:31.78,0:19:34.78,720cn,,0,0,0,,它永远表示2的幂
Dialogue: 2,0:19:31.78,0:19:34.78,720en,,0,0,0,,it always represents some power of 2
Dialogue: 1,0:19:34.78,0:19:39.56,720cn,,0,0,0,,值可能非常小，但是有值
Dialogue: 2,0:19:34.78,0:19:39.81,720en,,0,0,0,,it can be very small but there will be always some value in here all right
Dialogue: 1,0:19:39.81,0:19:43.82,720cn,,0,0,0,,所以我们永远不能表示0
Dialogue: 2,0:19:39.84,0:19:43.82,720en,,0,0,0,,so we will never be able to represent number 0
Dialogue: 1,0:19:43.82,0:19:47.98,720cn,,0,0,0,,因为这一位永远表示某个值
Dialogue: 2,0:19:43.82,0:19:47.98,720en,,0,0,0,,because we'll always have some value given by this bit
Dialogue: 1,0:19:48.84,0:19:52.98,720cn,,0,0,0,,所幸这种表示法有个例外
Dialogue: 2,0:19:48.84,0:19:52.98,720en,,0,0,0,,fortunately this representation has an exception for that
Dialogue: 1,0:19:53.60,0:19:57.36,720cn,,0,0,0,,当指数是最小值
Dialogue: 2,0:19:53.60,0:19:57.36,720en,,0,0,0,,so when our exponent gets his lowest possible value
Dialogue: 1,0:19:57.36,0:20:01.00,720cn,,0,0,0,,指数部分所有数位都为0
Dialogue: 2,0:19:57.36,0:20:01.00,720en,,0,0,0,,so when the all bits of the exponent are 0
Dialogue: 1,0:20:01.62,0:20:07.44,720cn,,0,0,0,,我们的指数是-1023，隐藏位也是0
Dialogue: 2,0:20:01.62,0:20:07.44,720en,,0,0,0,,so our exponent is minus 1023 the hidden bits also turns to 0
Dialogue: 1,0:20:07.96,0:20:14.98,720cn,,0,0,0,,这样我们能表示0了，所有的数位都是0
Dialogue: 2,0:20:07.96,0:20:14.98,720en,,0,0,0,,so this way we can represent zero as all the bits being 0
Dialogue: 1,0:20:15.22,0:20:23.30,720cn,,0,0,0,,当然我们可以改变有效数字的数位来表示一个非常接近0的数
Dialogue: 2,0:20:15.22,0:20:23.55,720en,,0,0,0,,and we can of course change some bits in significant to represent numbers very close to 0
Dialogue: 1,0:20:23.55,0:20:30.48,720cn,,0,0,0,,这些叫做“非常规数” 因为隐藏位是0
Dialogue: 2,0:20:23.58,0:20:30.48,720en,,0,0,0,,they are called sub normal values because of this hidden bit being 0
Dialogue: 1,0:20:33.42,0:20:37.02,720cn,,0,0,0,,但你可能还记得这个家伙
Dialogue: 2,0:20:33.42,0:20:37.02,720en,,0,0,0,,but you may remember this sign guy in here
Dialogue: 1,0:20:37.02,0:20:43.86,720cn,,0,0,0,,我说过这是符号位，可以改变数值的正负
Dialogue: 2,0:20:37.04,0:20:43.86,720en,,0,0,0,,and I told you that we can use it to change the sign of any number represented in this representation
Dialogue: 1,0:20:43.86,0:20:47.38,720cn,,0,0,0,,把符号位从0变成1会发生什么呢？
Dialogue: 2,0:20:43.86,0:20:47.38,720en,,0,0,0,,so what would happen if we change the sign of 0
Dialogue: 1,0:20:48.44,0:20:50.82,720cn,,0,0,0,,我们得到了-0
Dialogue: 2,0:20:48.44,0:20:51.00,720en,,0,0,0,,yeah we will get minus 0
Dialogue: 1,0:20:51.00,0:20:54.88,720cn,,0,0,0,,事实上浮点数表示法定义了两个0
Dialogue: 2,0:20:51.02,0:20:54.88,720en,,0,0,0,,actually the floating point representation defines two 0s
Dialogue: 1,0:20:54.88,0:20:56.84,720cn,,0,0,0,,+0和-0
Dialogue: 2,0:20:54.88,0:20:57.09,720en,,0,0,0,,positive and negative one
Dialogue: 1,0:20:57.09,0:21:02.48,720cn,,0,0,0,,Javascript中，-0并不常见
Dialogue: 2,0:20:57.12,0:21:02.48,720en,,0,0,0,,in JavaScript it's not very easy to notice this negative zero
Dialogue: 1,0:21:02.48,0:21:08.76,720cn,,0,0,0,,只有一些特殊操作，比如除以负无穷大，才会得到-0
Dialogue: 2,0:21:02.48,0:21:08.98,720en,,0,0,0,,because there are only certain operations that return it like dividing by minus infinity
Dialogue: 1,0:21:08.98,0:21:18.72,720cn,,0,0,0,,但-0确实存在，并且和+0在表示上是有区别的
Dialogue: 2,0:21:08.98,0:21:18.72,720en,,0,0,0,,but it's there and the difference between negative 0 and positive 0 can be actually detected
Dialogue: 1,0:21:19.96,0:21:28.77,720cn,,0,0,0,,所以我们见过当指数是最小值情况了
Dialogue: 2,0:21:19.96,0:21:28.77,720en,,0,0,0,,so we've seen what happens when the exponent is again when the exponent is at its lowest value
Dialogue: 1,0:21:28.77,0:21:32.58,720cn,,0,0,0,,现在我们看另一种极端的情况
Dialogue: 2,0:21:28.78,0:21:32.58,720en,,0,0,0,,so now let's see the other side of the extreme
Dialogue: 1,0:21:36.22,0:21:42.28,720cn,,0,0,0,,所有的数位都为1，让指数值取最大值
Dialogue: 2,0:21:36.22,0:21:42.47,720en,,0,0,0,,when we have all the bits of the exponent set to 1 for the highest exponent value
Dialogue: 1,0:21:42.47,0:21:49.68,720cn,,0,0,0,,这是为正无穷和负无穷的保留值
Dialogue: 2,0:21:42.50,0:21:49.68,720en,,0,0,0,,this is the value reserved for the Infinity positive or negative infinity
Dialogue: 1,0:21:50.36,0:21:53.04,720cn,,0,0,0,,所以无穷大就是长这样
Dialogue: 2,0:21:50.36,0:21:53.04,720en,,0,0,0,,so that's how the Infinity looks like
Dialogue: 1,0:21:53.04,0:21:58.11,720cn,,0,0,0,,指数部分都为1，有效数字部分都为0
Dialogue: 2,0:21:53.06,0:21:58.11,720en,,0,0,0,,all the exponent bits set to 1 and all the significant bits set to 0
Dialogue: 1,0:21:58.11,0:22:04.12,720cn,,0,0,0,,当改变有效数字部分会发生什么呢？
Dialogue: 2,0:21:58.12,0:22:04.12,720en,,0,0,0,,and what will happen if we try to change this significant bits to 1
Dialogue: 1,0:22:04.72,0:22:09.76,720cn,,0,0,0,,我们得到了NaN，但并不是因为出现了错误
Dialogue: 2,0:22:04.72,0:22:09.76,720en,,0,0,0,,Bang! we get a NaN and it's not because there is some error
Dialogue: 1,0:22:10.28,0:22:15.32,720cn,,0,0,0,,浮点数表示法定义了NaN
Dialogue: 2,0:22:10.28,0:22:15.32,720en,,0,0,0,,actually floating point representation defines NaN value
Dialogue: 1,0:22:15.32,0:22:24.58,720cn,,0,0,0,,所以当指数部分都为1时，有效数字的任意位不能为1，否则就是NaN
Dialogue: 2,0:22:15.34,0:22:24.58,720en,,0,0,0,,so if all the exponent bits are set to 1 and any bit in the significant is set to 1 it's NaN value
Dialogue: 1,0:22:24.79,0:22:31.22,720cn,,0,0,0,,这解释了为什么NaN的类型是number
Dialogue: 2,0:22:24.80,0:22:31.22,720en,,0,0,0,,so it kind of explains why NaN type is a number
Dialogue: 1,0:22:31.22,0:22:36.30,720cn,,0,0,0,,因为NaN的值使用浮点数表示法来定义的
Dialogue: 2,0:22:31.24,0:22:36.30,720en,,0,0,0,,because NaN is a value defined by the floating point representation
Dialogue: 1,0:22:36.30,0:22:40.78,720cn,,0,0,0,,和数字一样，也是64位
Dialogue: 2,0:22:36.30,0:22:40.78,720en,,0,0,0,,it's defined by 64 bits like any other number
Dialogue: 1,0:22:41.54,0:22:49.60,720cn-2,,0,0,0,,由于有52位的有效数字位，所以NaN实际上有很多不同的值
Dialogue: 2,0:22:41.54,0:22:49.60,720en,,0,0,0,,actually this we have 52 bits in significance so there are quite many NaN values defined in this representation
Dialogue: 1,0:22:49.60,0:22:54.44,720cn,,0,0,0,,还好Javascript把它简化为一个NaN
Dialogue: 2,0:22:49.62,0:22:54.44,720en,,0,0,0,,fortunately to us JavaScript simplifies it to only one NaN
Dialogue: 1,0:22:59.24,0:23:06.98,720cn,,0,0,0,,好，我们现在回顾一下刚才所讲的
Dialogue: 2,0:22:59.24,0:23:06.98,720en,,0,0,0,,yeah but let's get maybe back to numbers and summarize it what we already heard here
Dialogue: 1,0:23:08.48,0:23:14.12,720cn,,0,0,0,,对于任意数字
Dialogue: 2,0:23:08.48,0:23:14.12,720en,,0,0,0,,so for any given number we can compute its value
Dialogue: 1,0:23:14.12,0:23:23.98,720cn-2,,0,0,0,,我们都可以通过有效数字，小数点位置和指数来计算它的值
Dialogue: 2,0:23:14.12,0:23:23.98,720en,,0,0,0,,by computing the values of the significant bits with the position of the point based on the value from the exponent
Dialogue: 1,0:23:23.98,0:23:27.99,720cn,,0,0,0,,数字的符号位决定正负
Dialogue: 2,0:23:23.98,0:23:27.99,720en,,0,0,0,,and design defining a design of our number
Dialogue: 1,0:23:27.99,0:23:33.88,720cn,,0,0,0,,正如一开始所说的，我们可以把指数当作乘数
Dialogue: 2,0:23:28.00,0:23:34.04,720en,,0,0,0,,but as I told you at the very beginning we can treat the exponent as kind of a multiplier
Dialogue: 1,0:23:34.04,0:23:40.18,720cn,,0,0,0,,如果我们把它拿出来当作乘数
Dialogue: 2,0:23:34.06,0:23:40.18,720en,,0,0,0,,so if we take it out of this parenthesis and treat it as a multiplier
Dialogue: 1,0:23:40.18,0:23:46.19,720cn,,0,0,0,,我们将它与有效数字相乘，从2的0次幂开始
Dialogue: 2,0:23:40.18,0:23:46.19,720en,,0,0,0,,we start to compute the significant value always starting with 2 to the power of 0
Dialogue: 1,0:23:46.19,0:23:49.00,720cn,,0,0,0,,是隐藏位的值
Dialogue: 2,0:23:46.20,0:23:49.00,720en,,0,0,0,,it's the value given by this hidden bit
Dialogue: 1,0:23:53.68,0:23:59.84,720cn,,0,0,0,,我们总可以把它置为1，因为2的0次幂是1
Dialogue: 2,0:23:53.68,0:23:59.84,720en,,0,0,0,,so we can always set it to 1 because you know 2 to the power of 0 is 1
Dialogue: 1,0:23:59.84,0:24:02.40,720cn,,0,0,0,,这是由隐藏位决定的
Dialogue: 2,0:23:59.84,0:24:02.40,720en,,0,0,0,,so that's the one given by the hidden bit
Dialogue: 1,0:24:03.84,0:24:07.18,720cn,,0,0,0,,这里我们得出了指数的值
Dialogue: 2,0:24:03.84,0:24:07.52,720en,,0,0,0,,and here we have the value computed for the exponent
Dialogue: 1,0:24:07.52,0:24:18.38,720cn-2,,0,0,0,,通过这种方式我们反向工程化了这个公式，这个双精度浮点数计算的公式
Dialogue: 2,0:24:07.54,0:24:18.38,720en,,0,0,0,,and this way we kind of reverse engineered the equation for how the numbers are computed in double floating-point representation
Dialogue: 1,0:24:18.38,0:24:26.96,720cn,,0,0,0,,这和我们在Wikipedia中看到的公式类似
Dialogue: 2,0:24:18.38,0:24:26.96,720en,,0,0,0,,and that's the equation you can find in similar fashion on this Wikipedia page
Dialogue: 1,0:24:28.56,0:24:34.18,720cn,,0,0,0,,我理解对于狂欢之后的周日早上，这是一个硬核的话题
Dialogue: 2,0:24:28.56,0:24:34.52,720en,,0,0,0,,so I know it was quite a hardcore topic for a Sunday morning after the great party
Dialogue: 1,0:24:34.52,0:24:43.72,720cn,,0,0,0,,但是我希望你对javascript数字多了一些了解
Dialogue: 2,0:24:34.54,0:24:43.72,720en,,0,0,0,,but I hope that I have given you at least a little bit of understanding how numbers in JavaScript work
Dialogue: 1,0:24:43.72,0:24:46.78,720cn,,0,0,0,,Javascript中的数字为什么会存在一些问题
Dialogue: 2,0:24:43.72,0:24:46.88,720en,,0,0,0,,and why we have all these problems we've done
Dialogue: 1,0:24:46.88,0:24:53.62,720cn,,0,0,0,,并且以后我们可以自认为明白二进制
Dialogue: 2,0:24:46.90,0:24:53.62,720en,,0,0,0,,and hopefully after this talk we can all think about ourselves as those who understand binary
Dialogue: 1,0:24:54.14,0:25:01.18,720cn,,0,0,0,,或许下一次你被Javascript数字一些奇怪的行为难倒
Dialogue: 2,0:24:54.14,0:25:01.52,720en,,0,0,0,,and maybe next time you stumble upon some weird behavior with numbers with JavaScript
Dialogue: 1,0:25:01.52,0:25:03.10,720cn,,0,0,0,,你会问问自己为什么会这样
Dialogue: 2,0:25:01.54,0:25:03.10,720en,,0,0,0,,and you will ask yourself why
Dialogue: 1,0:25:03.10,0:25:09.50,720cn,,0,0,0,,因为答案就在那里，等待我们去发掘
Dialogue: 2,0:25:03.10,0:25:09.50,720en,,0,0,0,,because answers and reasons are out there waiting for us to find them
Dialogue: 1,0:25:09.50,0:25:14.56,720cn,,0,0,0,,保持你的好奇心，因为你会学到好多非常有意思的东西
Dialogue: 2,0:25:09.50,0:25:14.56,720en,,0,0,0,,so be curious because there is hell a lot of interesting things you can learn
Dialogue: 1,0:25:14.56,0:25:18.12,720cn,,0,0,0,,也有很多你意想不到的答案
Dialogue: 2,0:25:14.56,0:25:18.12,720en,,0,0,0,,and sometimes quite unexpected answers you can get
Dialogue: 1,0:25:19.64,0:25:21.80,720cn,,0,0,0,,我就讲到这里
Dialogue: 2,0:25:19.64,0:25:21.80,720en,,0,0,0,,so that was all I had for you
Dialogue: 1,0:25:22.94,0:25:24.96,720cn,,0,0,0,,可以关注我的Twitter
Dialogue: 2,0:25:22.94,0:25:24.96,720en,,0,0,0,,you can follow me on Twitter
